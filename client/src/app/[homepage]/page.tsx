'use client';

import React, { useState, useEffect } from 'react';
import { useParams } from 'next/navigation';
import {
  Box,
  Typography,
  Paper,
  Container,
  Avatar,
  Chip,
  CircularProgress,
  Alert,
} from '@mui/material';
import { Comment } from '@/graphql/types';

export default function HomePageComment() {
  const params = useParams();
  const homepage = params.homepage as string;

  const [comment, setComment] = useState<Comment | null>(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);

  useEffect(() => {
    if (homepage) {
      // –ò–º–∏—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
      setLoading(true);
      setTimeout(() => {
        // –ó–¥–µ—Å—å –≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –±—ã–ª –±—ã –∑–∞–ø—Ä–æ—Å –∫ API
        setLoading(false);
        setError('–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω');
      }, 1000);
    }
  }, [homepage]);

  if (loading) {
    return (
      <Container maxWidth="md" sx={{ py: 4 }}>
        <Box
          display="flex"
          justifyContent="center"
          alignItems="center"
          minHeight="200px"
        >
          <CircularProgress />
        </Box>
      </Container>
    );
  }

  if (error) {
    return (
      <Container maxWidth="md" sx={{ py: 4 }}>
        <Alert severity="error" sx={{ mb: 2 }}>
          –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è: {error}
        </Alert>
        <Box textAlign="center">
          <Typography variant="h6" color="text.secondary" gutterBottom>
            –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω
          </Typography>
          <Typography variant="body1" color="text.secondary">
            –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Å URL &quot;{homepage}&quot; –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.
          </Typography>
        </Box>
      </Container>
    );
  }

  if (!comment) {
    return (
      <Container maxWidth="md" sx={{ py: 4 }}>
        <Box textAlign="center">
          <Typography variant="h6" color="text.secondary" gutterBottom>
            –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω
          </Typography>
          <Typography variant="body1" color="text.secondary">
            –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Å URL &quot;{homepage}&quot; –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.
          </Typography>
        </Box>
      </Container>
    );
  }

  return (
    <Container maxWidth="md" sx={{ py: 4 }}>
      <Paper elevation={2} sx={{ p: 3 }}>
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <Box display="flex" alignItems="center" mb={3}>
          <Avatar sx={{ mr: 2, bgcolor: 'primary.main' }}>
            {comment.avatar}
          </Avatar>
          <Box>
            <Typography variant="h5" component="h1" gutterBottom>
              –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –æ—Ç {comment.author}
            </Typography>
            <Typography variant="body2" color="text.secondary">
              {comment.timestamp}
            </Typography>
          </Box>
        </Box>

        {/* URL –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è */}
        <Box mb={3}>
          <Chip
            label={`üåê ${comment.homepage}`}
            variant="outlined"
            color="primary"
            sx={{ fontSize: '1rem' }}
          />
        </Box>

        {/* –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è */}
        <Box mb={3}>
          <Typography variant="h6" gutterBottom>
            –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ:
          </Typography>
          <Paper variant="outlined" sx={{ p: 2, bgcolor: 'grey.50' }}>
            <Typography variant="body1" component="div">
              {comment.content}
            </Typography>
          </Paper>
        </Box>

        {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
        <Box display="flex" gap={2} mb={3}>
          <Chip
            label={`–£—Ä–æ–≤–µ–Ω—å: ${comment.level}`}
            color="info"
            variant="outlined"
          />
          <Chip label="üìù –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π" color="primary" variant="outlined" />
        </Box>

        {/* –û—Ç–≤–µ—Ç—ã */}
        {comment.replies && comment.replies.length > 0 && (
          <Box>
            <Typography variant="h6" gutterBottom>
              –û—Ç–≤–µ—Ç—ã ({comment.replies.length}):
            </Typography>
            {comment.replies.map((reply) => (
              <Paper
                key={reply.id}
                variant="outlined"
                sx={{ p: 2, mb: 2, ml: 3 }}
              >
                <Box display="flex" alignItems="center" mb={1}>
                  <Avatar sx={{ mr: 2, width: 32, height: 32 }}>
                    {reply.avatar}
                  </Avatar>
                  <Box>
                    <Typography variant="subtitle1" fontWeight="bold">
                      {reply.author}
                    </Typography>
                    <Typography variant="caption" color="text.secondary">
                      {reply.timestamp}
                    </Typography>
                  </Box>
                </Box>
                <Typography variant="body2">{reply.content}</Typography>
                <Box display="flex" gap={1} mt={1}>
                  <Chip
                    label="üí¨ –û—Ç–≤–µ—Ç"
                    size="small"
                    color="info"
                    variant="outlined"
                  />
                </Box>
              </Paper>
            ))}
          </Box>
        )}

        {/* –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ */}
        <Box textAlign="center" mt={4}>
          <Typography
            variant="body2"
            color="primary"
            sx={{ cursor: 'pointer', textDecoration: 'underline' }}
            onClick={() => window.history.back()}
          >
            ‚Üê –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å–ø–∏—Å–∫—É –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
          </Typography>
        </Box>
      </Paper>
    </Container>
  );
}
